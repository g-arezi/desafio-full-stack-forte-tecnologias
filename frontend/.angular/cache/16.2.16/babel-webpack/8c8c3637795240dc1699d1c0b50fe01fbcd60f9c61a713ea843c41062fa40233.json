{"ast":null,"code":"import { throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AssetService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000/assets';\n    this.employeeAssetUrl = 'http://localhost:3000/employee-assets';\n  }\n  getAllAssets() {\n    return this.http.get(this.apiUrl).pipe(retry(1), catchError(this.handleError));\n  }\n  getAssetById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`).pipe(retry(1), catchError(this.handleError));\n  }\n  createAsset(asset) {\n    return this.http.post(this.apiUrl, asset).pipe(catchError(this.handleError));\n  }\n  updateAsset(id, asset) {\n    return this.http.patch(`${this.apiUrl}/${id}`, asset).pipe(catchError(this.handleError));\n  }\n  deleteAsset(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`).pipe(catchError(this.handleError));\n  }\n  // Employee-Asset associations\n  getEmployeeAssets(employeeId) {\n    return this.http.get(`${this.employeeAssetUrl}/employee/${employeeId}`).pipe(retry(1), catchError(this.handleError));\n  }\n  assignAssetToEmployee(employeeId, assetId) {\n    return this.http.post(this.employeeAssetUrl, {\n      employeeId,\n      assetId\n    }).pipe(catchError(this.handleError));\n  }\n  unassignAssetFromEmployee(employeeAssetId) {\n    return this.http.delete(`${this.employeeAssetUrl}/${employeeAssetId}`).pipe(catchError(this.handleError));\n  }\n  getAvailableAssets() {\n    return this.http.get(`${this.apiUrl}/available`).pipe(retry(1), catchError(this.handleError));\n  }\n  handleError(error) {\n    let errorMessage = 'Ocorreu um erro desconhecido!';\n    if (error.error instanceof ErrorEvent) {\n      // Erro do lado do cliente\n      errorMessage = `Erro: ${error.error.message}`;\n    } else {\n      // Erro do lado do servidor\n      errorMessage = `Erro ${error.status}: ${error.message}`;\n      if (error.error && error.error.message) {\n        errorMessage += ` - ${error.error.message}`;\n      }\n    }\n    console.error('Erro no AssetService:', errorMessage);\n    return throwError(() => new Error(errorMessage));\n  }\n  static {\n    this.ɵfac = function AssetService_Factory(t) {\n      return new (t || AssetService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AssetService,\n      factory: AssetService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["throwError","catchError","retry","AssetService","constructor","http","apiUrl","employeeAssetUrl","getAllAssets","get","pipe","handleError","getAssetById","id","createAsset","asset","post","updateAsset","patch","deleteAsset","delete","getEmployeeAssets","employeeId","assignAssetToEmployee","assetId","unassignAssetFromEmployee","employeeAssetId","getAvailableAssets","error","errorMessage","ErrorEvent","message","status","console","Error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Usuario\\Desktop\\Desafio Forte-tecnologias\\desafio-full-stack-forte-tecnologias\\frontend\\src\\app\\services\\asset.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, retry } from 'rxjs/operators';\r\nimport { Asset, CreateAssetDto, EmployeeAsset } from '../models/asset.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AssetService {\r\n  private apiUrl = 'http://localhost:3000/assets';\r\n  private employeeAssetUrl = 'http://localhost:3000/employee-assets';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getAllAssets(): Observable<Asset[]> {\r\n    return this.http.get<Asset[]>(this.apiUrl)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getAssetById(id: number): Observable<Asset> {\r\n    return this.http.get<Asset>(`${this.apiUrl}/${id}`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  createAsset(asset: CreateAssetDto): Observable<Asset> {\r\n    return this.http.post<Asset>(this.apiUrl, asset)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  updateAsset(id: number, asset: Partial<Asset>): Observable<Asset> {\r\n    return this.http.patch<Asset>(`${this.apiUrl}/${id}`, asset)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  deleteAsset(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  // Employee-Asset associations\r\n  getEmployeeAssets(employeeId: number): Observable<EmployeeAsset[]> {\r\n    return this.http.get<EmployeeAsset[]>(`${this.employeeAssetUrl}/employee/${employeeId}`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  assignAssetToEmployee(employeeId: number, assetId: number): Observable<EmployeeAsset> {\r\n    return this.http.post<EmployeeAsset>(this.employeeAssetUrl, { employeeId, assetId })\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  unassignAssetFromEmployee(employeeAssetId: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.employeeAssetUrl}/${employeeAssetId}`)\r\n      .pipe(\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  getAvailableAssets(): Observable<Asset[]> {\r\n    return this.http.get<Asset[]>(`${this.apiUrl}/available`)\r\n      .pipe(\r\n        retry(1),\r\n        catchError(this.handleError)\r\n      );\r\n  }\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'Ocorreu um erro desconhecido!';\r\n    \r\n    if (error.error instanceof ErrorEvent) {\r\n      // Erro do lado do cliente\r\n      errorMessage = `Erro: ${error.error.message}`;\r\n    } else {\r\n      // Erro do lado do servidor\r\n      errorMessage = `Erro ${error.status}: ${error.message}`;\r\n      if (error.error && error.error.message) {\r\n        errorMessage += ` - ${error.error.message}`;\r\n      }\r\n    }\r\n    \r\n    console.error('Erro no AssetService:', errorMessage);\r\n    return throwError(() => new Error(errorMessage));  \r\n  }\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}